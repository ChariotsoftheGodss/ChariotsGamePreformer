from flask import Flask, request, redirect, url_for
import requests

from steam_auth import STEAM_API_KEY

app = Flask(__name__)

@app.route('/steam/callback')
def steam_callback():
    # Extract OpenID parameters
    openid_mode = request.args.get('openid.mode')
    claimed_id = request.args.get('openid.claimed_id')
    sig = request.args.get('openid.sig')

    # Check if the OpenID authentication was successful
    if openid_mode != 'id_res':
        return "OpenID authentication failed.", 400

    # Here you can further validate the signature (sig) and other parameters

    # Proceed to fetch user info
    steam_id = claimed_id.split('/')[-1]  # Extract the Steam ID from the claimed ID
    user_info, games = fetch_user_info(steam_id, STEAM_API_KEY)

    # Handle the fetched user info and games
    # For example, you might want to save it to a session or database

    return redirect(url_for('some_other_function'))  # Redirect after successful login

def fetch_user_info(steam_id, api_key):
    player_summary_url = f"http://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002/?key={api_key}&steamids={steam_id}"
    response = requests.get(player_summary_url)

    if response.status_code != 200:
        print(f"Error fetching player summary: {response.status_code} - {response.text}")
        return None, []

    try:
        player_data = response.json()
    except ValueError:
        print(f"Error decoding JSON for player summary: {response.text}")
        return None, []

    # Process the player data and return user info and games
    return player_data, []  # Replace with actual data processing

if __name__ == "__main__":
    app.run(debug=True)
